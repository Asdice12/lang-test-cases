(sequence (declare F (function (signature int var) (parameters n) (sequence (declare get_n (function (signatrue int) (parameters) (sequence (return (lookup n))))) (declare addition (function (signature int var int var var) (parameters other_b other_c other_d other_e) (sequence (return (call (lookup F) (arguments (+ (+ (+ (+ (lookup n) (call (call (lookup other_b) (arguments 1)) (arguments))) (call (call (lookup other_c) (arguments 1)) (arguments))) (call (call (lookup other_d) (arguments 1)) (arguments))) (call (call (lookup other_e) (arguments 1)) (arguments))))))))) (return (function (parameters index) (sequence (if (== (lookup index) 1) (sequence (return (lookup get_n)))) (if (== (lookup index) 2) (sequence (return (lookup addition)))))))))) (declare int a (call (lookup F) (arguments 0))) (declare int b (call (lookup F) (arguments 1))) (declare int c (call (lookup F) (arguments 2))) (declare int d (call (lookup F) (arguments 3))) (declare int e (call (lookup F) (arguments 4))) (declare func f (call (call (lookup a) (arguments 2)) (arguments (lookup b) (lookup c) (lookup d) (lookup e)))) (print (call (call (lookup f) (arguments 1)) (arguments))))